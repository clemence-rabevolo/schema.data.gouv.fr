{"remainingRequest":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/babel-loader/lib/index.js??ref--3-1!/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/site/.vuepress/theme/global-components/InventoryBase.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/site/.vuepress/theme/global-components/InventoryBase.vue","mtime":1628086293276},{"path":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["InventoryBase.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAA,MAAA,MAAA,QAAA;AAEA,IAAA,OAAA,GAAA;AACA,EAAA,IAAA,EAAA;AACA,IAAA,KAAA,EAAA,MADA;AAEA,IAAA,MAAA,EAAA;AAFA,GADA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,OADA;AAEA,IAAA,MAAA,EAAA,uCAFA;AAGA,IAAA,MAAA,EAAA,gBAAA,IAAA,EAAA,GAAA;AAAA,aACA,GAAA,CAAA,GAAA,CAAA,GAAA,uBAAA,GAAA,CAAA,GAAA,CAAA,GAAA,gBAAA,IAAA,YAAA,IADA;AAAA;AAHA,GALA;AAWA,EAAA,YAAA,EAAA;AACA,IAAA,KAAA,EAAA,WADA;AAEA,IAAA,MAAA,EAAA;AAFA,GAXA;AAeA,EAAA,MAAA,EAAA;AACA,IAAA,KAAA,EAAA,oBADA;AAEA,IAAA,MAAA,EAAA,mBAFA;AAGA,IAAA,MAAA,EAAA,gBAAA,IAAA,EAAA,GAAA;AAAA,4CACA,GAAA,CAAA,MAAA,CAAA,MADA,gBACA,IAAA,CAAA,KADA;AAAA,KAHA;AAKA,IAAA,KAAA,EAAA;AALA,GAfA;AAsBA,EAAA,IAAA,EAAA;AACA,IAAA,KAAA,EAAA,6BADA;AAEA,IAAA,MAAA,EAAA,sCAFA;AAGA,IAAA,MAAA,EAAA,gBAAA,IAAA,EAAA,GAAA,EAAA;AACA,UAAA,IAAA,GAAA,GAAA,CAAA,IAAA;;AACA,wBAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AAAA;AAAA,UAAA,SAAA;AAAA,UAAA,IAAA;;AAEA,UACA,GAAA,CAAA,MAAA,CAAA,GAAA,IAAA,MAAA,IACA,MAAA,GAAA,IAAA,MAAA,QAAA,CAAA,IAAA,CADA,IAEA,MAAA,GAAA,OAAA,KAAA,QAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAHA,EAIA;AACA,0BAAA,MAAA,GAAA,OAAA,EAAA,cAAA,MAAA,GAAA,IAAA,EAAA;AACA,OANA,MAMA;AACA,yBAAA,SAAA,cAAA,IAAA;AACA;AACA;AAhBA;AAtBA,CAAA;AA0CA,IAAA,QAAA,GAAA,CACA;AACA,EAAA,KAAA,EAAA,YADA;AAEA,EAAA,GAAA,EAAA,MAFA;AAGA,EAAA,OAAA,EAAA,IAHA;AAIA,EAAA,MAAA,EAAA,OAJA;AAKA,EAAA,aAAA,EAAA;AALA,CADA,EAQA;AACA,EAAA,KAAA,EAAA,UADA;AAEA,EAAA,GAAA,EAAA,SAFA;AAGA,EAAA,OAAA,EAAA,IAHA;AAIA,EAAA,MAAA,EAAA,QAJA;AAKA,EAAA,aAAA,EAAA;AALA,CARA,EAeA;AACA,EAAA,KAAA,EAAA,gBADA;AAEA,EAAA,GAAA,EAAA,SAFA;AAGA,EAAA,OAAA,EAAA,IAHA;AAIA,EAAA,MAAA,EAAA,KAJA;AAKA,EAAA,aAAA,EAAA;AALA,CAfA,CAAA;AAwBA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,IAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA,EAJA;AAKA,MAAA,YAAA,EAAA,IALA;AAMA,MAAA,OAAA,EAAA,OANA;AAOA,MAAA,OAAA,EAAA,MAAA,CAAA,MAAA,CACA,MAAA,CAAA,OAAA,CAAA,OAAA,EAAA,GAAA,CAAA,UAAA,CAAA;AAAA;AAAA,UAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAAA,WAAA,CAAA,CAAA,CAAA,CAAA;AAAA,OAAA,CADA,CAPA;AAUA,MAAA,OAAA,EAAA;AAVA,KAAA;AAYA,GAfA;AAgBA,EAAA,QAAA,EAAA;AACA,IAAA,gBADA,8BACA;AAAA;;AACA,UAAA,QAAA,GAAA,KAAA,QAAA,CAAA,KAAA,EAAA;AAEA,MAAA,QAAA,GAAA,QAAA,CACA,MADA,CACA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,MAAA,CAAA,OAAA,IAAA,IAAA;AAAA,OADA,EAEA,MAFA,CAEA,UAAA,CAAA;AAAA,eAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA,IAAA,CAAA,CAAA,IAAA,IAAA,KAAA,CAAA,OAAA,CAAA,IAAA;AAAA,OAFA,EAGA,MAHA,CAIA,UAAA,CAAA;AAAA,eAAA,CAAA,KAAA,CAAA,OAAA,CAAA,MAAA,IAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,KAAA,CAAA,OAAA,CAAA,MAAA;AAAA,OAJA,EAMA,MANA,CAMA,UAAA,CAAA;AAAA,eAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA,IAAA,CAAA,CAAA,YAAA,IAAA,KAAA,CAAA,OAAA,CAAA,GAAA;AAAA,OANA,EAOA,MAPA,CAQA,UAAA,CAAA;AAAA,eAAA,CAAA,KAAA,CAAA,OAAA,CAAA,SAAA,IAAA,CAAA,CAAA,IAAA,IAAA,KAAA,CAAA,OAAA,CAAA,SAAA;AAAA,OARA,CAAA;AAWA,UAAA,KAAA,KAAA,CAAA,MAAA,GAAA,CAAA,EAAA,OAAA,QAAA;AAEA,MAAA,QAAA,GAAA,QAAA,CAAA,MAAA,CAAA,UAAA,OAAA,EAAA;AACA,eAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA,IAAA,CAAA,UAAA,KAAA,EAAA;AACA,cAAA,CAAA,OAAA,CAAA,KAAA,CAAA,IAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA,WAAA,EAAA,OAAA,KAAA;AAEA,iBAAA,OAAA,CAAA,KAAA,CAAA,CACA,WADA,GAEA,QAFA,CAEA,KAAA,CAAA,KAAA,CAAA,WAAA,EAFA,CAAA;AAGA,SANA,CAAA;AAOA,OARA,CAAA;AAUA,aAAA,QAAA;AACA,KA5BA;AA6BA,IAAA,sBA7BA,oCA6BA;AACA,aAAA,KAAA,gBAAA,CAAA,KAAA,GAAA,IAAA,CAAA,KAAA,iBAAA,CAAA;AACA,KA/BA;AAgCA,IAAA,QAhCA,sBAgCA;AAAA;;AACA,UAAA,KAAA,GAAA;AACA,QAAA,MAAA,EAAA,CADA;AAEA,QAAA,OAAA,EAAA,CAFA;AAGA,QAAA,OAAA,EAAA,CAHA;AAIA,QAAA,IAAA,EAAA,CAJA;AAKA,QAAA,OAAA,EAAA;AALA,OAAA;AAOA,WAAA,gBAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,YAAA,KAAA,GAAA,OAAA,CAAA,MAAA;;AACA,YAAA,MAAA,GAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,KAAA,IAAA,KAAA;AAAA,SAAA,CAAA;;AACA,YAAA,MAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,GAAA,CAAA,IAAA,CAAA;AACA;AACA,OANA;AAOA,aAAA,KAAA;AACA,KAhDA;AAiDA,IAAA,aAjDA,2BAiDA;AAAA;;AACA,UAAA,IAAA,GAAA,KAAA,QAAA,CAAA,GAAA,CAAA,UAAA,OAAA;AAAA,eAAA,OAAA,CAAA,YAAA;AAAA,OAAA,CAAA;AACA,MAAA,IAAA,sBAAA,IAAA,GAAA,CAAA,IAAA,CAAA,CAAA;AACA,MAAA,IAAA,GAAA,IAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA;AACA,UAAA,KAAA,EAAA,CADA;AAEA,UAAA,GAAA,EAAA,CAFA;AAGA,UAAA,KAAA,EAAA,MAAA,CAAA,gBAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,mBAAA,CAAA,CAAA,YAAA,IAAA,CAAA;AAAA,WAAA,EAAA;AAHA,SAAA;AAAA,OAAA,CAAA;AAKA,MAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,eAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,KAAA;AAAA,OAAA;AACA,aAAA,IAAA;AACA,KA3DA;AA4DA,IAAA,UA5DA,wBA4DA;AACA,UAAA,UAAA,sBACA,IAAA,GAAA,CACA,KAAA,QAAA,CACA,IADA,CACA,KAAA,iBADA,EAEA,GAFA,CAEA,UAAA,OAAA;AAAA,eAAA,OAAA,CAAA,IAAA;AAAA,OAFA,CADA,CADA,CAAA;;AAOA,aAAA,UAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA;AAAA,UAAA,KAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA;AAAA,SAAA;AAAA,OAAA,CAAA;AACA,KArEA;AAsEA,IAAA,KAtEA,mBAsEA;AACA,UAAA,KAAA,sBAAA,IAAA,GAAA,CAAA,KAAA,QAAA,CAAA,GAAA,CAAA,UAAA,OAAA;AAAA,eAAA,OAAA,CAAA,IAAA;AAAA,OAAA,CAAA,CAAA,CAAA;;AACA,aAAA,KAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA;AAAA,UAAA,KAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA;AAAA,SAAA;AAAA,OAAA,CAAA;AACA;AAzEA,GAhBA;AA2FA,EAAA,OA3FA,qBA2FA,CAAA,CA3FA;AA4FA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,6BACA,CADA,EACA,CADA,EACA;AACA,UAAA,EAAA,GAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA,UAAA,EAAA,GAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA,aAAA,EAAA,CAAA,aAAA,CAAA,EAAA,CAAA;AACA,KALA;AAMA,IAAA,MANA,kBAMA,KANA,EAMA;AACA,UAAA,MAAA,GAAA,KAAA,QAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,GAAA,IAAA,KAAA;AAAA,OAAA,CAAA;AACA,MAAA,MAAA,CAAA,OAAA,GAAA,CAAA,MAAA,CAAA,OAAA;AACA,KATA;AAUA,IAAA,UAVA,sBAUA,GAVA,EAUA;AACA,aAAA,MAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,YAAA,CAAA;AACA;AAZA;AA5FA,CAAA","sourcesContent":["<template>\n  <div>\n    <InventoryDataProxy\n      :mapping=\"mapping\"\n      :statuses=\"statuses\"\n      @input=\"\n        datasets = $event.datasets;\n        lastModified = $event.lastModified;\n      \"\n    />\n\n    <div v-if=\"datasets.length > 0\">\n      <InventoryFilter\n        v-model=\"filters\"\n        :types=\"types\"\n        :statuses=\"statuses\"\n        :trimesters=\"trimesters\"\n        :organizations=\"organizations\"\n      />\n\n      <InventoryTable :datasets=\"filteredSortedDatasets\" :columns=\"columns\" />\n\n      <p>Dernière modification : {{ formatDate(lastModified) }}</p>\n    </div>\n    <div v-else>\n      <em>Données en cours de chargement...</em>\n    </div>\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\n\nconst mapping = {\n  type: {\n    label: \"Type\",\n    source: \"Données, API ou code source\",\n  },\n  title: {\n    label: \"Titre\",\n    source: \"Données, API, Codes sources concernés\",\n    format: (cell, row) =>\n      row.raw.URL ? `<a href=\"${row.raw.URL}\">${cell}</a>` : cell,\n  },\n  organization: {\n    label: \"Ministère\",\n    source: \"Ministère\",\n  },\n  status: {\n    label: \"Statut d’ouverture\",\n    source: \"État d'avancement\",\n    format: (cell, row) =>\n      `<span class=\"fr-tag ${row.status._class}\">${cell.label}</a>`,\n    width: \"12em\",\n  },\n  date: {\n    label: \"Date estimée de publication\",\n    source: \"Échéance annoncée par les ministères\",\n    format: (cell, row) => {\n      const date = row.date;\n      const [trimester, year] = date.split(\" \");\n\n      if (\n        row.status.key != \"open\" &&\n        moment().year() >= parseInt(year) &&\n        moment().quarter() > parseInt(trimester[1])\n      ) {\n        return `T${moment().quarter()} ${moment().year()}`;\n      } else {\n        return `${trimester} ${year}`;\n      }\n    },\n  },\n};\n\nconst statuses = [\n  {\n    label: \"Disponible\",\n    key: \"open\",\n    visible: true,\n    _class: \"green\",\n    labelExtended: \"disponbiles\",\n  },\n  {\n    label: \"Planifié\",\n    key: \"opening\",\n    visible: true,\n    _class: \"yellow\",\n    labelExtended: \"planifiés\",\n  },\n  {\n    label: \"Non disponible\",\n    key: \"notopen\",\n    visible: true,\n    _class: \"red\",\n    labelExtended: \"non disponibles\",\n  },\n];\n\nexport default {\n  name: \"InventoryBase\",\n  data() {\n    return {\n      statuses,\n      loading: true,\n      query: \"\",\n      datasets: [],\n      lastModified: null,\n      mapping,\n      columns: Object.values(\n        Object.entries(mapping).map((r) => ({ key: r[0], ...r[1] }))\n      ),\n      filters: {},\n    };\n  },\n  computed: {\n    filteredDatasets() {\n      let datasets = this.datasets.slice();\n\n      datasets = datasets\n        .filter((d) => d.status.visible == true)\n        .filter((d) => !this.filters.type || d.type == this.filters.type)\n        .filter(\n          (d) => !this.filters.status || d.status.label == this.filters.status\n        )\n        .filter((d) => !this.filters.org || d.organization == this.filters.org)\n        .filter(\n          (d) => !this.filters.trimester || d.date == this.filters.trimester\n        );\n\n      if (this.query.length < 3) return datasets;\n\n      datasets = datasets.filter((dataset) => {\n        return Object.keys(mapping).some((field) => {\n          if (!dataset[field] || !dataset[field].toLowerCase) return false;\n\n          return dataset[field]\n            .toLowerCase()\n            .includes(this.query.toLowerCase());\n        });\n      });\n\n      return datasets;\n    },\n    filteredSortedDatasets() {\n      return this.filteredDatasets.slice().sort(this.compareTrimesters);\n    },\n    counters() {\n      const count = {\n        closed: 0,\n        opening: 0,\n        preview: 0,\n        open: 0,\n        notopen: 0,\n      };\n      this.filteredDatasets.forEach((dataset) => {\n        const value = dataset.status;\n        const status = this.statuses.find((s) => s.label == value);\n        if (status) {\n          count[status.key] += 1;\n        }\n      });\n      return count;\n    },\n    organizations() {\n      let orgs = this.datasets.map((dataset) => dataset.organization);\n      orgs = [...new Set(orgs)];\n      orgs = orgs.map((o) => ({\n        label: o,\n        key: o,\n        count: this.filteredDatasets.filter((d) => d.organization == o).length,\n      }));\n      orgs.sort((a, b) => b.count - a.count);\n      return orgs;\n    },\n    trimesters() {\n      const trimesters = [\n        ...new Set(\n          this.datasets\n            .sort(this.compareTrimesters)\n            .map((dataset) => dataset.date)\n        ),\n      ];\n      return trimesters.map((t) => ({ label: t, key: t }));\n    },\n    types() {\n      const types = [...new Set(this.datasets.map((dataset) => dataset.type))];\n      return types.map((t) => ({ label: t, key: t }));\n    },\n  },\n  mounted() {},\n  methods: {\n    compareTrimesters(a, b) {\n      const ta = a.date.split(\" \")[1] + a.date.split(\" \")[0];\n      const tb = b.date.split(\" \")[1] + b.date.split(\" \")[0];\n      return ta.localeCompare(tb);\n    },\n    toggle(badge) {\n      const status = this.statuses.find((s) => s.key == badge);\n      status.visible = !status.visible;\n    },\n    formatDate(str) {\n      return moment(str).format(\"DD/MM/YYYY\");\n    },\n  },\n};\n</script>\n\n<style>\n.fr-tag.green {\n  background-color: #00ac8c;\n  color: white;\n}\n.fr-tag.yellow {\n  background-color: #fdcf41;\n}\n.fr-tag.red {\n  background-color: #ff6f4c;\n}\n</style>\n"],"sourceRoot":"site/.vuepress/theme/global-components"}]}