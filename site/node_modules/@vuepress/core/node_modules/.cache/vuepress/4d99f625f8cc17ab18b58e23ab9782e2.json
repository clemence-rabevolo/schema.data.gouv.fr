{"remainingRequest":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/vue-loader/lib/index.js??ref--1-1!/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/site/schemas/scdl/plats-menus-collectifs/0.2.0/README.md?vue&type=template&id=19bd5de5&","dependencies":[{"path":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/site/schemas/scdl/plats-menus-collectifs/0.2.0/README.md","mtime":1628175944286},{"path":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJNZW51U2NoZW1hIiksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygKICAgICAgICAiaDEiLAogICAgICAgIHsKICAgICAgICAgIGF0dHJzOiB7IGlkOiAic2NoZW1hcGxhdHMtZGVzLW1lbnVzLWRlLWxhLXJlc3RhdXJhdGlvbi1jb2xsZWN0aXZlIiB9CiAgICAgICAgfSwKICAgICAgICBbX3ZtLl92KCJTY2jDqW1hcGxhdHMgZGVzIG1lbnVzIGRlIGxhIHJlc3RhdXJhdGlvbiBjb2xsZWN0aXZlIildCiAgICAgICksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiQ2Ugc2Now6ltYSBwZXJtZXQgZGUgZMOpY3JpcmUgbGEgY29tcG9zaXRpb24gZGVzIHBsYXRzIHByb3Bvc8OpcyBwYXIgbGVzIGNvbGxlY3Rpdml0w6lzIGxvY2FsZXMgb3UgbGVzIHN5bmRpY2F0cyBtaXh0ZXMgZGUgcmVzdGF1cmF0aW9uLiBJbCBlc3QgY29tcGzDqXTDqSBwYXIgdW4gYXV0cmUgc2Now6ltYSBkw6ljcml2YW50IGxhIGNvbXBvc2l0aW9uIGRlcyBtZW51cyIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogImNvbnRleHRlIiB9IH0sIFtfdm0uX3YoIkNvbnRleHRlIildKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJDZXR0ZSBpbml0aWF0aXZlIHZpZGUgw6Agc3RhbmRhcmRpc2VyIGxhIHB1YmxpY2F0aW9uIGRlcyBqZXV4IGRlIGRvbm7DqWVzIHJlbGF0aWZzIGF1eCBvZmZyZXMgZGUgcmVzdGF1cmF0aW9uIGNvbGxlY3RpdmUuIEVsbGUgY29uY2VybmUgbGEgcmVzdGF1cmF0aW9uIHNjb2xhaXJlIG1haXMgcGV1dCBzJ8OpdGVuZHJlIGF1eCBvZmZyZXMgZGUgcmVzdGF1cmF0aW9uIHBvdXIgbGVzIHBlcnNvbm5lcyDDomfDqWVzLCBsZXMgcmVzdGF1cmFudHMgYWRtaW5pc3RyYXRpZnMgb3UgbGVzIGNlbnRyZXMgZGUgbG9pc2lycy4gRWxsZSBzJ2FydGljdWxlIGF1dG91ciBkZXMgbm90aW9ucyBkZSBtZW51cywgZXQgZGVzIHBsYXRzIHF1aSBsZXMgY29tcG9zZW50LiBVbiBzY2jDqW1hIGNvbXBsw6ltZW50YWlyZSBlc3QgZMOpZGnDqSDDoCBsYSBjb21wb3NpdGlvbiBkZXMgbWVudXMgcGVybWV0dGFudCBwb3VyIGNldXggcXVpIGxlIHNvdWhhaXRlbnQgZGUgZMOpY2lyZSBsZXMgcGxhdHMgcXVpIGVudHJlbnQgZGFucyBsYSBjb21wb3NpdGlvbiBkZXMgbWVudXMuIExlcyAyIHNjaMOpbWEgc29udCBsacOpcyBwYXIgdW5lIGNsw6kgY29tbXVuZSBcImNvZGVQbGF0XCIuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAiZG9jdW1lbnRzLWRlLWNhZHJhZ2UtanVyaWRpcXVlIiB9IH0sIFsKICAgICAgICBfdm0uX3YoIkRvY3VtZW50cyBkZSBjYWRyYWdlIGp1cmlkaXF1ZSIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgInByb2R1aXQgYmlvIGV0IGxhYmVsbGlzw6kgOiA1MCUgZG9udCAyMCUgaXNzdSBkZSBsJ2FncmljdWx0dXJlIGJpb2xvZ2lxdWUgKHN0YW5kYXJkIGV1cm9ww6llbiBvdSBmcmFuw6dhaXMgPykiCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiNTAlIGRlIHByb2R1aXRzIGR1cmFibGVzIG91IHNvdXMgc2lnbmVzIGQnb3JpZ2luZSBldCBkZSBxdWFsaXTDqSAoZG9udCBkZXMgcHJvZHVpdHMgYmlvKSBkYW5zIGxhIHJlc3RhdXJhdGlvbiBjb2xsZWN0aXZlIHB1YmxpcXVlIMOgIHBhcnRpciBkdSAxZXIgamFudmllciAyMDIyIDpodHRwczovL3d3dy5sZWdpZnJhbmNlLmdvdXYuZnIvYWZmaWNoVGV4dGUuZG8/Y2lkVGV4dGU9Sk9SRlRFWFQwMDAwMzc1NDc5NDYmY2F0ZWdvcmllTGllbj1pZCNKT1JGQVJUSTAwMDAzNzU0Nzk2MSIKICAgICAgICAgICkKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJkw6ljcmV0IDEyMjctMjAxMSByZWxhdGlmIMOgIGxhIHF1YWxpdMOpIG51dHJpdGlvbm5lbGxlIGRlcyByZXBhcyBzZXJ2aXMgZW4gcmVzdGF1cmF0aW9uIHNjb2xhaXJlIgogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgInJlY29tbWFuZGF0aW9ucyBkdSBHRU1SQ04gKEdyb3VwZSBkJ0V0dWRlIGRlcyBNYXJjaMOpcyBkZSBsYSBSZXN0YXVyYXRpb24gQ29sbGVjdGl2ZSBldCBOdXRyaXRpb24sIgogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgInLDqWdsZW1lbnQgMTE2OS8yMDExIGNvbmNlcm5hbnQgbCdpbmZvcm1hdGlvbiBkZXMgY29uc29tbWF0ZXVycyBzdXIgbGVzIGRlbnLDqWVzIGFsaW1lbnRhaXJlcyAocsOpZ2xlbWVudCBJTkNPKS4iCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAib3V0aWxzIiB9IH0sIFtfdm0uX3YoIk91dGlscyIpXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygidWwiLCBbCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBocmVmOgogICAgICAgICAgICAgICAgICAiaHR0cHM6Ly9nby52YWxpZGF0YS5mci90YWJsZS1zY2hlbWE/c2NoZW1hX25hbWU9c2NkbC5wbGF0cy1tZW51cy1jb2xsZWN0aWZzIiwKICAgICAgICAgICAgICAgIHRhcmdldDogIiIsCiAgICAgICAgICAgICAgICByZWw6ICJub29wZW5lciBub3JlZmVycmVyIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICBzcmM6CiAgICAgICAgICAgICAgICAgICAgImh0dHBzOi8vc2NkbC5vcGVuZGF0YWZyYW5jZS5uZXQvZG9jcy9hc3NldHMvdmFsaWRhdGEtbG9nby1ob3Jpem9udGFsLnBuZyIsCiAgICAgICAgICAgICAgICAgIGFsdDogIiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImEiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgIGhyZWY6CiAgICAgICAgICAgICAgICAgICJodHRwOi8vZ28udmFsaWRhdGEuZnIvdGFibGUtc2NoZW1hP3NjaGVtYV9uYW1lPXNjZGwucGxhdHMtbWVudXMtY29sbGVjdGlmcyIsCiAgICAgICAgICAgICAgICB0YXJnZXQ6ICIiLAogICAgICAgICAgICAgICAgcmVsOiAibm9vcGVuZXIgbm9yZWZlcnJlciIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoIlZhbGlkZXIgdW4gZmljaGllciBhdmVjIFZhbGlkYXRhIildCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBocmVmOiAiaHR0cHM6Ly9jc3YtZ2cuZXRhbGFiLnN0dWRpby8/c2NoZW1hPXNjZGwiLAogICAgICAgICAgICAgICAgdGFyZ2V0OiAiIiwKICAgICAgICAgICAgICAgIHJlbDogIm5vb3BlbmVyIG5vcmVmZXJyZXIiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbX3ZtLl92KCJDcsOpZXIgdW4gZmljaGllciBhdmVjIENTViBHb29kIEdlbmVyYXRvciIpXQogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYSIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgaHJlZjoKICAgICAgICAgICAgICAgICAgImh0dHBzOi8vc2NkbC5vcGVuZGF0YWZyYW5jZS5uZXQvZG9jcy90ZW1wbGF0ZXMvcGxhdHMtbWVudXMtY29sbGVjdGlmcy54bHN4IiwKICAgICAgICAgICAgICAgIHRhcmdldDogIiIsCiAgICAgICAgICAgICAgICByZWw6ICJub29wZW5lciBub3JlZmVycmVyIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgW192bS5fdigiVMOpbMOpY2hhcmdlciB1biBmaWNoaWVyIGdhYmFyaXQgYXUgZm9ybWF0IFhMU1giKV0KICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJ2b2lyLWF1c3NpIiB9IH0sIFtfdm0uX3YoIlZvaXIgYXVzc2kiKV0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigiYWRyZXNzZXIgdW4gbWVzc2FnZSDDoCAiKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYSIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgaHJlZjoKICAgICAgICAgICAgICAgICAgIm1haWx0bzpzY2RsQG9wZW5kYXRhZnJhbmNlLmVtYWlsP3N1YmplY3Q9cGxhdHMtbWVudXMtY29sbGVjdGlmcyIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoInNjZGxAb3BlbmRhdGFmcmFuY2UuZW1haWwiKV0KICAgICAgICAgICkKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoIm91dnJpciB1biB0aWNrZXQgc3VyIGxlICIpLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBocmVmOgogICAgICAgICAgICAgICAgICAiaHR0cHM6Ly9naXQub3BlbmRhdGFmcmFuY2UubmV0L3NjZGwvcGxhdHMtbWVudXMtY29sbGVjdGlmcy9pc3N1ZXMiLAogICAgICAgICAgICAgICAgdGFyZ2V0OiAiIiwKICAgICAgICAgICAgICAgIHJlbDogIm5vb3BlbmVyIG5vcmVmZXJyZXIiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbX3ZtLl92KCJkw6lww7R0IEdpdExhYiBk4oCZT3BlbkRhdGFGcmFuY2UiKV0KICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKQogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}