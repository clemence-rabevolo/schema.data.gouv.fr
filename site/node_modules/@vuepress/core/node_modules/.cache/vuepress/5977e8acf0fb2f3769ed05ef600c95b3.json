{"remainingRequest":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/vue-loader/lib/index.js??ref--1-1!/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/site/schemas/scdl/plats-menus-collectifs/0.3.0/README.md?vue&type=template&id=08406466&","dependencies":[{"path":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/site/schemas/scdl/plats-menus-collectifs/0.3.0/README.md","mtime":1628251494060},{"path":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/geof/projects/refonte-schema/schema.data.gouv.fr/site/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJNZW51U2NoZW1hIiksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygKICAgICAgICAiaDEiLAogICAgICAgIHsKICAgICAgICAgIGF0dHJzOiB7IGlkOiAic2NoZW1hLXBsYXRzLWRlcy1tZW51cy1kZS1sYS1yZXN0YXVyYXRpb24tY29sbGVjdGl2ZSIgfQogICAgICAgIH0sCiAgICAgICAgW192bS5fdigiU2Now6ltYSBwbGF0cyBkZXMgbWVudXMgZGUgbGEgcmVzdGF1cmF0aW9uIGNvbGxlY3RpdmUiKV0KICAgICAgKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJDZSBzY2jDqW1hIHBlcm1ldCBkZSBkw6ljcmlyZSBsYSBjb21wb3NpdGlvbiBkZXMgcGxhdHMgcHJvcG9zw6lzIHBhciBsZXMgY29sbGVjdGl2aXTDqXMgbG9jYWxlcyBvdSBsZXMgc3luZGljYXRzIG1peHRlcyBkZSByZXN0YXVyYXRpb24uIElsIGVzdCBjb21wbMOpdMOpIHBhciB1biBhdXRyZSBzY2jDqW1hIGTDqWNyaXZhbnQgbGEgY29tcG9zaXRpb24gZGVzIG1lbnVzIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAiY29udGV4dGUiIH0gfSwgW192bS5fdigiQ29udGV4dGUiKV0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkNldHRlIGluaXRpYXRpdmUgdmlkZSDDoCBzdGFuZGFyZGlzZXIgbGEgcHVibGljYXRpb24gZGVzIGpldXggZGUgZG9ubsOpZXMgcmVsYXRpZnMgYXV4IG9mZnJlcyBkZSByZXN0YXVyYXRpb24gY29sbGVjdGl2ZS4gRWxsZSBjb25jZXJuZSBsYSByZXN0YXVyYXRpb24gc2NvbGFpcmUgbWFpcyBwZXV0IHMnw6l0ZW5kcmUgYXV4IG9mZnJlcyBkZSByZXN0YXVyYXRpb24gcG91ciBsZXMgcGVyc29ubmVzIMOiZ8OpZXMsIGxlcyByZXN0YXVyYW50cyBhZG1pbmlzdHJhdGlmcyBvdSBsZXMgY2VudHJlcyBkZSBsb2lzaXJzLiBFbGxlIHMnYXJ0aWN1bGUgYXV0b3VyIGRlcyBub3Rpb25zIGRlIG1lbnVzLCBldCBkZXMgcGxhdHMgcXVpIGxlcyBjb21wb3NlbnQuIFVuIHNjaMOpbWEgY29tcGzDqW1lbnRhaXJlIGVzdCBkw6lkacOpIMOgIGxhIGNvbXBvc2l0aW9uIGRlcyBtZW51cyBwZXJtZXR0YW50IHBvdXIgY2V1eCBxdWkgbGUgc291aGFpdGVudCBkZSBkw6ljaXJlIGxlcyBwbGF0cyBxdWkgZW50cmVudCBkYW5zIGxhIGNvbXBvc2l0aW9uIGRlcyBtZW51cy4gTGVzIDIgc2Now6ltYSBzb250IGxpw6lzIHBhciB1bmUgY2zDqSBjb21tdW5lIFwiY29kZVBsYXRcIi4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJkb2N1bWVudHMtZGUtY2FkcmFnZS1qdXJpZGlxdWUiIH0gfSwgWwogICAgICAgIF92bS5fdigiRG9jdW1lbnRzIGRlIGNhZHJhZ2UganVyaWRpcXVlIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygidWwiLCBbCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAicHJvZHVpdCBiaW8gZXQgbGFiZWxsaXPDqSA6IDUwJSBkb250IDIwJSBpc3N1IGRlIGwnYWdyaWN1bHR1cmUgYmlvbG9naXF1ZSAoc3RhbmRhcmQgZXVyb3DDqWVuIG91IGZyYW7Dp2FpcyA/KSIKICAgICAgICAgICkKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICI1MCUgZGUgcHJvZHVpdHMgZHVyYWJsZXMgb3Ugc291cyBzaWduZXMgZCdvcmlnaW5lIGV0IGRlIHF1YWxpdMOpIChkb250IGRlcyBwcm9kdWl0cyBiaW8pIGRhbnMgbGEgcmVzdGF1cmF0aW9uIGNvbGxlY3RpdmUgcHVibGlxdWUgw6AgcGFydGlyIGR1IDFlciBqYW52aWVyIDIwMjIgOmh0dHBzOi8vd3d3LmxlZ2lmcmFuY2UuZ291di5mci9hZmZpY2hUZXh0ZS5kbz9jaWRUZXh0ZT1KT1JGVEVYVDAwMDAzNzU0Nzk0NiZjYXRlZ29yaWVMaWVuPWlkI0pPUkZBUlRJMDAwMDM3NTQ3OTYxIgogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgImTDqWNyZXQgMTIyNy0yMDExIHJlbGF0aWYgw6AgbGEgcXVhbGl0w6kgbnV0cml0aW9ubmVsbGUgZGVzIHJlcGFzIHNlcnZpcyBlbiByZXN0YXVyYXRpb24gc2NvbGFpcmUiCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAicmVjb21tYW5kYXRpb25zIGR1IEdFTVJDTiAoR3JvdXBlIGQnRXR1ZGUgZGVzIE1hcmNow6lzIGRlIGxhIFJlc3RhdXJhdGlvbiBDb2xsZWN0aXZlIGV0IE51dHJpdGlvbiwiCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAicsOpZ2xlbWVudCAxMTY5LzIwMTEgY29uY2VybmFudCBsJ2luZm9ybWF0aW9uIGRlcyBjb25zb21tYXRldXJzIHN1ciBsZXMgZGVucsOpZXMgYWxpbWVudGFpcmVzIChyw6lnbGVtZW50IElOQ08pLiIKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJvdXRpbHMiIH0gfSwgW192bS5fdigiT3V0aWxzIildKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJ1bCIsIFsKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImEiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgIGhyZWY6CiAgICAgICAgICAgICAgICAgICJodHRwczovL2dvLnZhbGlkYXRhLmZyL3RhYmxlLXNjaGVtYT9zY2hlbWFfbmFtZT1zY2RsLnBsYXRzLW1lbnVzLWNvbGxlY3RpZnMiLAogICAgICAgICAgICAgICAgdGFyZ2V0OiAiIiwKICAgICAgICAgICAgICAgIHJlbDogIm5vb3BlbmVyIG5vcmVmZXJyZXIiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgIHNyYzoKICAgICAgICAgICAgICAgICAgICAiaHR0cHM6Ly9zY2RsLm9wZW5kYXRhZnJhbmNlLm5ldC9kb2NzL2Fzc2V0cy92YWxpZGF0YS1sb2dvLWhvcml6b250YWwucG5nIiwKICAgICAgICAgICAgICAgICAgYWx0OiAiIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYSIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgaHJlZjoKICAgICAgICAgICAgICAgICAgImh0dHA6Ly9nby52YWxpZGF0YS5mci90YWJsZS1zY2hlbWE/c2NoZW1hX25hbWU9c2NkbC5wbGF0cy1tZW51cy1jb2xsZWN0aWZzIiwKICAgICAgICAgICAgICAgIHRhcmdldDogIiIsCiAgICAgICAgICAgICAgICByZWw6ICJub29wZW5lciBub3JlZmVycmVyIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgW192bS5fdigiVmFsaWRlciB1biBmaWNoaWVyIGF2ZWMgVmFsaWRhdGEiKV0KICAgICAgICAgICkKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImEiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgIGhyZWY6ICJodHRwczovL2Nzdi1nZy5ldGFsYWIuc3R1ZGlvLz9zY2hlbWE9c2NkbCIsCiAgICAgICAgICAgICAgICB0YXJnZXQ6ICIiLAogICAgICAgICAgICAgICAgcmVsOiAibm9vcGVuZXIgbm9yZWZlcnJlciIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoIkNyw6llciB1biBmaWNoaWVyIGF2ZWMgQ1NWIEdvb2QgR2VuZXJhdG9yIildCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBocmVmOgogICAgICAgICAgICAgICAgICAiaHR0cHM6Ly9zY2RsLm9wZW5kYXRhZnJhbmNlLm5ldC9kb2NzL3RlbXBsYXRlcy9wbGF0cy1tZW51cy1jb2xsZWN0aWZzLnhsc3giLAogICAgICAgICAgICAgICAgdGFyZ2V0OiAiIiwKICAgICAgICAgICAgICAgIHJlbDogIm5vb3BlbmVyIG5vcmVmZXJyZXIiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbX3ZtLl92KCJUw6lsw6ljaGFyZ2VyIHVuIGZpY2hpZXIgZ2FiYXJpdCBhdSBmb3JtYXQgWExTWCIpXQogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogInZvaXItYXVzc2kiIH0gfSwgW192bS5fdigiVm9pciBhdXNzaSIpXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygidWwiLCBbCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KCJhZHJlc3NlciB1biBtZXNzYWdlIMOgICIpLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBocmVmOgogICAgICAgICAgICAgICAgICAibWFpbHRvOnNjZGxAb3BlbmRhdGFmcmFuY2UuZW1haWw/c3ViamVjdD1wbGF0cy1tZW51cy1jb2xsZWN0aWZzIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgW192bS5fdigic2NkbEBvcGVuZGF0YWZyYW5jZS5lbWFpbCIpXQogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigib3V2cmlyIHVuIHRpY2tldCBzdXIgbGUgIiksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImEiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgIGhyZWY6CiAgICAgICAgICAgICAgICAgICJodHRwczovL2dpdC5vcGVuZGF0YWZyYW5jZS5uZXQvc2NkbC9wbGF0cy1tZW51cy1jb2xsZWN0aWZzL2lzc3VlcyIsCiAgICAgICAgICAgICAgICB0YXJnZXQ6ICIiLAogICAgICAgICAgICAgICAgcmVsOiAibm9vcGVuZXIgbm9yZWZlcnJlciIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoImTDqXDDtHQgR2l0TGFiIGTigJlPcGVuRGF0YUZyYW5jZSIpXQogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pCiAgICBdLAogICAgMQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}